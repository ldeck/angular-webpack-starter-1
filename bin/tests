#!/usr/bin/env bash

## associative array for job status
declare -A JOBS

## run command in the background
background() {
  eval $1 & JOBS[$!]="$1"
}

## check exit status of each job
## preserve exit status in ${JOBS}
## returns 1 if any job failed
reap() {
  local cmd
  local status=0
  for pid in ${!JOBS[@]}; do
    cmd=${JOBS[${pid}]}
    wait ${pid} ; JOBS[${pid}]=$?
    if [[ ${JOBS[${pid}]} -ne 0 ]]; then
      status=${JOBS[${pid}]}
      echo -e "[${pid}] Exited with status: ${status}\n${cmd}"
    fi
  done
  return ${status}
}

## start server
echo ">> Starting server"
npm start  2>&1  > app.log &

## wait till ready
PID=
while [ -z "$PID" ]; do
    sleep 1
    PID=$(lsof -n -i4TCP:8080 | grep LISTEN | awk '{print $2}')
done

echo "$PID" > app.pid

## run cucumber tests
background 'npm run test-bdd'


reap || echo ">> Oops! Some test jobs failed."

## stop server
echo ">> Stopping server $PID"
kill "$PID"
rm app.pid
